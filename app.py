import os
import subprocess
from flask import Flask, request, render_template, send_from_directory
from visualize_logs.visualize_logs import visualize_logs_function  # Replace with the actual import
from Visualize_Logs.objects.ProcMonCSV \
    import ProcMonCSV as ProcMonCSV
from Visualize_Logs.objects.CuckooJSONReport \
    import CuckooJSONReport as CuckooJSONReport
app = Flask(__name__)

# Configure the upload folder
UPLOAD_FOLDER = 'uploads'
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER
ALLOWED_EXTENSIONS = {'csv', 'json'}


def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS


@app.route('/', methods=['GET', 'POST'])
def index():

    if request.method == 'POST':
        if 'file' not in request.files:
            return render_template('index.html', message='No file part')

        file = request.files['file']

        if file.filename == '':
            return render_template('index.html', message='No selected file')

        if file and allowed_file(file.filename):
            filename = os.path.join(app.config['UPLOAD_FOLDER'], file.filename)
            file.save(filename)

            # Process the file using visualize_logs
            # visualization_image = visualize_logs_function(filename)

            # Define the command to run
            command = ["plotcuckoojson", filename]
            # Use subprocess to run the command
            output_file_path = ""
            try:
                result = subprocess.run(command, stdout=subprocess.PIPE, check=True)
                print(result.stdout)
                print(result.stderr)
                output_file_path = os.path.join(app.config['UPLOAD_FOLDER'], result.stdout)
                result.stdout.save(output_file_path)
            except subprocess.CalledProcessError as e:
                print(f"Error running visualize_logs: {e}")

            # vl = CuckooJSONReport(filename)
            #
            # print('Plotting log: {0}'.format(filename))
            # vl.plotgraph()

            return render_template('index.html', message=output_file_path)

    return render_template('index.html')


@app.route('/uploads/<filename>')
def uploaded_file(filename):
    return send_from_directory(app.config['UPLOAD_FOLDER'], filename)


if __name__ == '__main__':
    app.run(debug=True)
